user koality;

worker_processes		auto;
worker_rlimit_nofile	8192;

error_log				/etc/koality/current/nginx/logs/error.log warn;
pid						/var/run/nginx.pid;

events {
	worker_connections	8000;
}

http {
	include				/etc/nginx/mime.types;
	default_type		application/octet-stream;

	access_log 			off;
	server_tokens		off;

	tcp_nopush			on;
	tcp_nodelay			off;
	sendfile			on;
	keepalive_timeout	0;
	keepalive_requests	1000;
	open_file_cache		max=100 inactive=30m;

	gzip				on;
	gzip_vary			on;
	gzip_http_version 	1.0;
	gzip_comp_level 	5;
	gzip_min_length 	256;
	gzip_proxied 		any;
	gzip_types			text/plain text/css image/png image/gif image/jpeg
						application/x-javascript text/xml application/xml
						application/xml+rss text/javascript;

	map $http_upgrade $connection_upgrade {
		default	upgrade;
		''		close;
	}

	server {
		listen	80;
		return	301	https://$host$request_uri;
	}

	upstream backend {
		ip_hash;
		server	127.0.0.1:8080 max_fails=3	fail_timeout=15s;
	}

	server {
		listen	443 default_server ssl;
		root	/etc/koality/current/code/front/static;

		ssl							on;
		ssl_protocols 				SSLv3 TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers 				RC4:HIGH:!aNULL:!MD5;
		ssl_prefer_server_ciphers 	on;

		ssl_session_cache 			shared:SSL:10m; # a 1mb cache can hold about 4000 sessions, so we can hold 40000 sessions
		ssl_session_timeout			10m;

		ssl_certificate				/etc/koality/conf/certificate/certificate.pem;
		ssl_certificate_key			/etc/koality/conf/certificate/privatekey.pem;

		location / {
			expires	30d;
		}

		location ~ ^/($|login$|dashboard$|repository/|app/|api/|hooks/|oAuth/) {
			proxy_pass				http://backend;
			proxy_http_version		1.1;

			proxy_set_header		Host			$host;
			proxy_set_header		X-Real-IP		$remote_addr;
			proxy_set_header		X-Forwarded-For	$proxy_add_x_forwarded_for;

			proxy_set_header		Upgrade			$http_upgrade;
			proxy_set_header		Connection		$connection_upgrade;
		}
	}
}
